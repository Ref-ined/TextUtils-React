{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","onChange","event","target","value","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","replace","split","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","proptype","PropTypes","string","isRequired","aboutText","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f55784e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link \" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n              </li> */}\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.proptype={\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title:'title here',\r\n    aboutText:'About Here'\r\n\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick=()=>{\r\n        // console.log(\"UpperCase was clicked\");\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Upper Case\", \"success\")\r\n\r\n    } \r\n\r\n    const handleLowClick=()=>{\r\n        // console.log(\"LowerCase was clicked\");\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lower Case\", \"success\")\r\n\r\n    } \r\n\r\n    const handleClearClick=()=>{\r\n        // console.log(\"LowerCase was clicked\");\r\n        let newText='';\r\n        setText(newText);\r\n    } \r\n\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    } \r\n\r\n    const changeText=(event)=>{\r\n        // console.log(\"on change\");\r\n        if(text===\"Enter Text Here\"){            \r\n            setText('');\r\n            // console.log(\"function worked\")\r\n        }\r\n\r\n    }\r\n    const handleRmvSpace=(event)=>{\r\n        // console.log(\"on change\");\r\n        let newText=text.replace(/\\s/g,'');\r\n        setText(newText);\r\n        props.showAlert(\"Spaces Removed\", \"success\")\r\n\r\n    }\r\n\r\n    const [text, setText] = useState('Enter Text Here');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>   \r\n            <h1 className=\"mb-2\">{props.heading}</h1>        \r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"mybox\" style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} onChange={handleOnChange} rows={8} value={text} onClick={changeText}></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Upper Case</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLowClick} >Convert to Lower Case</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick} >Clear</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleRmvSpace} >Remove Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your Text Summary</h2>           \r\n            <p> <b>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}</b> words and <b>{text.length}</b> characters</p>\r\n            <p> <b>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length}</b> Minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n            {props.alert&& <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light') // Dark Mode enabled or not\n  const [alert, setAlert] = useState(null)\n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)      \n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#042743'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      // document.title='TextUtils Dark Mode'\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light mode has been enabled\",\"success\")\n      // document.title='TextUtils Light Mode'\n    }\n  }\n\n  return (\n    <>\n    {/* <Router>       */}\n      <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        {/* <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode}/>\n            </Route>\n            <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"TextUtils- Word Counter, Character Counter, Remove Spaces\"  mode={mode}/>\n            {/* </Route>\n        </Switch> */}\n\n      </div>\n    {/* </Router> */}\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}